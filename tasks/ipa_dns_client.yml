---

- name: Ipa_dns_client | ensure reverse zone is created
  freeipa.ansible_freeipa.ipadnszone:
    ipaadmin_password: "{{ company_realm_password }}"
    name_from_ip: "{{ nameserver_current_host_ip.msg | ansible.utils.ipsubnet(8) }}"
    ipaapi_context: server
    state: present
  failed_when: False # TODO too lazy to find a good regex that
  no_log: "{{ secure_logs }}"
  delegate_to: "{{ groups[idm_group][0] }}"
  register: ptr_zone

- name: Ipa_dns_client | Display ptr zone name.
  ansible.builtin.debug:
    msg: "PTR Zone: {{ nameserver_current_host_ip.msg | ansible.utils.ipsubnet(8) | replace('.0.0.0/8', '') }}.in-addr.arpa"

- name: Ipa_dns_client | allow ptr sync on dns zone
  freeipa.ansible_freeipa.ipadnszone:
    ipaadmin_password: "{{ company_realm_password }}"
    name: "{{ company_domain }}"
    allow_sync_ptr: true
    ipaapi_context: server
    state: present
  no_log: "{{ secure_logs }}"
  delegate_to: "{{ groups[idm_group][0] }}"

- name: Ipa_dns_client | debug input params
  ansible.builtin.debug:
    msg: "Params for dns entry. Zone: {{ company_domain }}, Record name: {{ (hostname | default(nameserver_computed_host.msg)) | replace('.' + company_domain, '') }}, Record IP: {{ nameserver_current_host_ip.msg }}, PTR: {{ nameserver_current_host_ip.msg | ansible.utils.ipaddr('revdns') | replace('.in-addr.arpa.', '') | ansible.utils.ipsubnet(24) | replace('.0/24', '') }}"

- name: Ipa_dns_client | remove potentially outdated ptr entries
  ansible.builtin.include_tasks: delete-outdated-ptr.yml

- name: Ipa_dns_client | ensure dns entry is created
  freeipa.ansible_freeipa.ipadnsrecord:
    ipaadmin_password: "{{ company_realm_password }}"
    ipaapi_context: server
    zone_name: "{{ company_domain }}"
    name: "{{ nameserver_computed_host.msg | replace('.' + company_domain, '') }}"
    a_rec: "{{ nameserver_current_host_ip.msg }}"
    create_reverse: yes
    state: present
  failed_when: False # don't know from where comes this sh****tty error, still, it works, even with a timeout as a response
  no_log: "{{ secure_logs }}"
  delegate_to: "{{ groups[idm_group][0] }}"

- name: Ipa_dns_client | ensure reverse dns entry is created
  freeipa.ansible_freeipa.ipadnsrecord:
    ipaadmin_password: "{{ company_realm_password }}"
    ipaapi_context: server
    zone_name: "{{ nameserver_current_host_ip.msg | ansible.utils.ipsubnet(8) | replace('.0.0.0/8', '') }}.in-addr.arpa"
    record_type: PTR
    ptr_hostname: "{{ nameserver_computed_host.msg | replace('.' + company_domain, '') }}"
    name: "{{ nameserver_current_host_ip.msg | ansible.utils.ipaddr('revdns') | replace('.in-addr.arpa.', '') | ansible.utils.ipsubnet(24) | replace('.0/24', '') }}"
    state: present
  failed_when: False # May have been created above
  no_log: "{{ secure_logs }}"
  delegate_to: "{{ groups[idm_group][0] }}"

- name: Ipa_dns_client | create resolved.conf.d directory
  become: true
  ansible.builtin.file:
    state: directory
    dest: '/etc/systemd/resolved.conf.d'
    mode: "0755"

- name: Ipa_dns_client | add internal domain dns
  ansible.builtin.template:
    src: systemd-resolved.conf.d/head.j2
    dest: /etc/systemd/resolved.conf.d/head.conf
    owner: root
    group: root
    mode: 0644
  become: true
  vars:
    dns_master_ip_to_set: "{{ nameserver_idm_ip.msg }}"
    domain: "{{ company_domain }}"
