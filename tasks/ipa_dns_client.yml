---

- name: ansible-nameserver | ipa_dns_client | set hostname
  include_role:
    name: tcharl.ansible_securehost
  when: standalone_role

- name: ansible-nameserver | ipa_dns_client | install netaddr
  ansible.builtin.package:
    name: python-netaddr
    state: present
  become: True

- name: ansible-nameserver | ipa_dns_client | get current hostname
  command: "hostname"
  register: machine_hostname
  changed_when: false

- name: ansible-securehost | ipa_dns_client-client | retreive current machine ip
  setup:
  register: current_client_facts
  delegate_facts: true

- name: ansible-securehost | freeipa-ipa_dns_client | compute ip if preferred_nic is not set
  ansible.builtin.debug:
    msg: "{{ current_client_facts.ansible_facts['ansible_' + preferred_nic].ipv4.address if preferred_nic is defined else current_client_facts.ansible_facts.ansible_default_ipv4.address | default(current_client_facts.ansible_facts.ansible_all_ipv4_addresses[0]) }}"
  register: current_client_ip

- name: ansible-securehost | freeipa-ipa_dns_client | debug dns zone creation
  ansible.builtin.debug:
    msg: "echo '{{ (current_client_ip.msg | ipsubnet(16) | ansible.netcommon.ipaddr('revdns')) | replace('0.0.','') }}' | ipa dnszone-add --name-from-ip={{ current_client_ip.msg | ipsubnet(16) }}"

- name: ansible-nameserver | ipa_dns_client | ensure reverse zone is created
  shell: >
    set -o pipefail && echo '{{ company_realm_password }}' | kinit admin > /dev/null &&
    ipa dnszone-add {{ (current_client_ip.msg | ipsubnet(16) | ansible.netcommon.ipaddr('revdns')) | replace('0.0.','') }}
  no_log: True
  failed_when: False
  delegate_to: "{{ groups[idm_group][0] }}"
  changed_when: False
  become: true

- name: ansible-nameserver | ipa_dns_client | ensure dns entry is created
  freeipa.ansible_freeipa.ipadnsrecord:
    ipaadmin_password: "{{ company_realm_password }}"
    zone_name: "{{ company_domain }}"
    name: "{{ (hostname | default(machine_hostname.stdout)) | replace('.' + company_domain, '') }}"
    a_ip_address: "{{ current_client_ip.msg }}"
    a_create_reverse: yes
    state: present
  no_log: True
  delegate_to: "{{ groups[idm_group][0] }}" # TODO concat all masters IPs
