---

- name: Ipa_dns_client | debug dns zone creation
  ansible.builtin.debug:
    msg: "echo '{{ current_host_ip.msg | ansible.utils.ipsubnet(8) }}'"

- name: Ipa_dns_client | ensure reverse zone is created
  freeipa.ansible_freeipa.ipadnszone:
    ipaadmin_password: "{{ company_realm_password }}"
    name_from_ip: " {{ current_host_ip.msg | ansible.utils.ipsubnet(8) }}"
    state: present
    skip_overlap_check: True
  no_log: "{{ secure_logs }}"
  delegate_to: "{{ groups[idm_group][0] }}"
  changed_when: False
  register: ptr_zone

- name: Ipa_dns_client | Display ptr zone name.
  ansible.builtin.debug:
    msg: "PTR Zone: {{ ptr_zone }}"

- name: Ipa_dns_client | allow ptr sync on dns zone
  freeipa.ansible_freeipa.ipadnszone:
    ipaadmin_password: "{{ company_realm_password }}"
    name: "{{ company_domain }}"
    allow_sync_ptr: true
    state: present
  no_log: "{{ secure_logs }}"
  failed_when: False
  delegate_to: "{{ groups[idm_group][0] }}"
  changed_when: False

#- name: ansible-nameserver | ipa_dns_client | allow ptr sync on dns zone
#  ansible.builtin.shell: >
#    set -o pipefail && echo '{{ company_realm_password }}' | kinit admin > /dev/null &&
#    ipa dnszone-mod --allow-sync-ptr=1 {{ company_domain }}
#  failed_when: False
#  changed_when: False
#  delegate_to: "{{ groups[idm_group][0] }}"
#  no_log: "{{ secure_logs }}"

- name: Ipa_dns_client | ensure dns entry is created
  freeipa.ansible_freeipa.ipadnsrecord:
    ipaadmin_password: "{{ company_realm_password }}"
    zone_name: "{{ company_domain }}"
    name: "{{ (hostname | default(nameserver_machine_hostname.stdout)) | replace('.' + company_domain, '') }}"
    a_rec: "{{ current_host_ip.msg }}"
    create_reverse: yes
    state: present
  no_log: "{{ secure_logs }}"
  delegate_to: "{{ groups[idm_group][0] }}"

- name: Ipa_dns_client | create resolved.conf.d directory
  become: true
  ansible.builtin.file:
    state: directory
    dest: '/etc/systemd/resolved.conf.d'
    mode: "0755"

- name: Ipa_dns_client | retrieve masters ip
  ansible.builtin.setup:
  register: ipadnsmasterssetup
  delegate_facts: true
  delegate_to: "{{ groups[idm_group][0] }}"

- name: Ipa_dns_client | compute master ip if preferred_nic is not set
  ansible.builtin.debug:
    msg: "{{ ipadnsmasterssetup.ansible_facts['ansible_' + dns_preferred_nic].ipv4.address if dns_preferred_nic is defined else ipadnsmasterssetup.ansible_facts.ansible_default_ipv4.address | default(ipadnsmasterssetup.ansible_facts.ansible_all_ipv4_addresses[0]) }}"
  register: idm_ipa_dns_master_ip

- name: Ipa_dns_client | add internal domain dns
  ansible.builtin.template:
    src: systemd-resolved.conf.d/head.j2
    dest: /etc/systemd/resolved.conf.d/head.conf
    owner: root
    group: root
    mode: 0644
  become: true
  vars:
    dns_master_ip_to_set: "{{ idm_ipa_dns_master_ip.msg }}"
    domain: "{{ company_domain }}"
